name: branch build check

on:
  pull_request:
    branches: [ main, develop, release ]

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  pr_check:
    runs-on: ubuntu-latest

    # job 실행 중 필요한 서비스들을 정의한다.
    # Docker Container로 설정할 수 있다.
    # 이 프로젝트는 PostgreSQL을 사용했기 때문에 postgres 환경으로 구성했다.
    services:
      postgres:
        image: postgres:latest
        env:
          # application.yml에서 DB를 test로 지정했었다.
          POSTGRES_DB: ${{ secrets.TEST_DB }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: make application.yml
        run: |
          mkdir ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.PROPERTIES }}" > ./application.yml
        shell: bash

      - name: make test application.yml
        run: |
          mkdir ./src/test/resources
          touch ./application.yml
          echo "${{ secrets.TEST-PROPERTIES }}" > ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Test with Gradle
        run: ./gradlew test

      - name: ktlintCheck with Gradle
        run: ./gradlew ktlintCheck

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: build/test-results/**/*.xml


      - name: On Failed, Notify in Slack
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#ff0000'
          SLACK_ICON: https://avatars.githubusercontent.com/u/108561231?size=48
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: 'CI checks have failed ⚠️🚫'
          MSG_MINIMAL: true
          SLACK_USERNAME: 어? 도랏노바?
          SLACK_MESSAGE: 'CI checks 실패했노바⚠️'

      - name: On Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#53A551'
          SLACK_ICON: https://avatars.githubusercontent.com/u/108561231?size=48
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: 'All checks have passed ✅🫡'
          MSG_MINIMAL: true
          SLACK_USERNAME: 슈퍼노바
          SLACK_MESSAGE: 'CI check 성공했노바 🎉'